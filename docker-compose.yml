version: '3.5'

services:
  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - .docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./.docker/rabbitmq/definitions.json:/etc/rabbitmq/definitons.json:ro
    networks:
      - app-network

  databaseapi:
    container_name: databaseapi
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    volumes:
      - .docker/db/:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - app-network

  databaseapitest:
    container_name: databaseapitest
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - .docker/testdb/:/data/postgres
    ports:
      - '5433:5432'
    networks:
      - app-network

  databaseevents:
    container_name: databaseevents
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    volumes:
      - .docker/dbevents/:/data/postgres
    ports:
      - '5434:5432'
    networks:
      - app-network

  databaseeventstest:
    container_name: databaseeventstest
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - .docker/testdbevents/:/data/postgres
    ports:
      - '5435:5432'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
